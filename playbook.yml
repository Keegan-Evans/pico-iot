- name: setup micropython library and build tools
  hosts: localhost
  connection: local
  tasks:
  - name: create workspace
    ansible.builtin.file:
      path: "/Users/keeganevans/work/4CSCC/pico-iot/pico"
      #path: "/home/beta/pico"
      recurse: yes
      state: directory
      mode: 0755

  - name: get micropython library
    ansible.builtin.git:
      repo: git@github.com:micropython/micropython.git
      dest: "/Users/keeganevans/work/4CSCC/pico-iot/pico/micropython"
      force: true
      #dest: "/home/beta/pico"

  - name: copy module files
    ansible.builtin.copy:
      src: "/Users/keeganevans/work/4CSCC/pico-iot/*.py"
      dest: "/Users/keeganevans/work/4CSCC/pico-iot/pico/micropython/ports/rp2/modules"
      #dest: "/home/beta/pico/micropython/ports/rp2/modules/"

  - name: make preliminaries
    ansible.builtin.command:
      cmd: "make BOARD=PICO_W -C /Users/keeganevans/work/4CSCC/pico-iot/pico/micropython/ports/rp2 submodules"
      #cmd: "make BOARD=PICO_W -C ports/rp2 submodules"

#  - name: update
#    ansible.builtin.apt:
#      update_cache: yes
#      cache_valid_time: 3600
#
#  - name: upgrade
#    ansible.builtin.apt:
#      upgrade: dist
#
#  - name: install board specific tools
#    ansible.builtin.apt:
#      pkg:
#        - cmake
#        - gcc-arm-none-eabi
#        - libnewlib-arm-none-eabi
#        - build-essential
#      state: present

  - name: make mpy-cross
    ansible.builtin.command:
      cmd: "make -C /Users/keeganevans/work/4CSCC/pico-iot/pico/micropython/mpy-cross/"
      #cmd: "make -C /home/beta/pico/mpy-cross/"

  - name: build port
    ansible.builtin.command:
      cmd: "make BOARD=PICO_W /Users/keeganevans/work/4CSCC/pico-iot/pico/micropython/ports/rp2/"
      #cmd: "make BOARD=PICO_W /home/beta/pico/ports/rp2/"

